---
- name: clone VMware template and customize
  vmware_guest:
    hostname: "{{vmware_vc.hostname}}"
    username: "{{vmware_vc.username}}"
    password: "{{vmware_vc.password}}"
    validate_certs: "{{vmware_vc.validate_certs}}"
    datacenter: "{{vmware_vc.datacenter}}"
    folder: "{{vmware_vc.datacenter}}/vm"
    cluster: "{{vmware_vc.cluster}}"
    name: "{{ item.name }}"
    template: "{{ item.template }}"
    customvalues: "{{ item.customvalues|default(omit) }}"
    state: "{{item.state|default('poweredon')}}"
   # wait_for_ip_address: yes
    disk: "{{ item.disk|default(omit) }}"
    hardware:
      memory_mb: "{{ item.memory }}"
      num_cpus: "{{ item.cpu }}"
      #scsi: paravirtual
    networks: "{{ item.networks }}"
    customization:
      domain: "{{ item.domain }}"
      dns_servers: "{{ item.dns_servers|default([]) }}"
  #async: 7200
  #poll: 0
  register: deploy
  with_items: "{{ vmware_vm }}"
  when: vmware_vm is defined

- name: Add tags to a virtual machine
  vmware_tag_manager:
    hostname: '{{ vmware_vc.hostname }}'
    username: '{{ vmware_vc.username }}'
    password: '{{ vmware_vc.password }}'
    validate_certs: '{{vmware_vc.validate_certs}}'
    tag_names: '{{ item.epg_tag }}'
    object_name: "{{ item.name }}"
    object_type: VirtualMachine
    state: add
  with_items: "{{ vmware_vm }}"
  delegate_to: localhost

#- name: Wait for instance creation to complete
#  async_status:
#    jid: "{{ item.ansible_job_id }}"
#  register: instances
#  until: instances.finished
#  retries: 300
#  delay: 10
#  with_items: "{{ deploy.results }}"

#- name: Waiting for servers to come online
#  wait_for:
#    host: "{{ item.instance.hw_eth0.ipaddresses[0] }}"
#    port: "22"
#    search_regex: OpenSSH
#  with_items: "{{ instances.results }}"
#  when: (instances | changed) and (item.instance is defined)
